-[ ] 能够说出Object类的特点
      祖宗类
      一切类都可以用它的方法!
-[ ] 能够重写Object类的toString方法
     自动生成！
-[ ] 能够重写Object类的equals方法

-[ ] 能够使用日期类输出当前日期
     Date d = new Date();
-[ ] 能够使用将日期格式化为字符串的方法
      //（1）可以把Date日期类或者时间毫秒值进行时间格式化。
         Date d = new Date();
         System.out.println(d);

         // 创建一个简单日期格式化对象 :
         // 参数：指定格式化时间的形式
         SimpleDateFormat sdf =
                 new SimpleDateFormat("yyyy年MM月dd日 HH:mm:ss a EEE");

         // 使用简单日期格式化对象把Date日期转换成格式化时间形式
         String rs = sdf.format(d);
         System.out.println(rs);
-[ ] 能够使用将字符串转换成日期的方法  parse
           //  a.先定义一个字符串的时间”2018-10-08 10:10:10“
             String timeStr = "2018-10-08 10:10:10";
             //  b.把字符串的时间解析成Date日期对象（开始懂了）
             //  简单日期格式化对象的参数：必须与被解析时间的格式完全一致
             //  否则不能解析，并且解析会导致程序异常。
             SimpleDateFormat sdf =
                     new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
             // 开始解析 ： d 此时的时间就是 2018-10-08 10:10:10
             Date d = sdf.parse(timeStr);

-[ ] 能够使用System类的数组复制方法 arraycopy
     // 做数组拷贝（数组复制）
        int[] arrs1 = new int[]{10,20,30,40,70,60};
        int[] arrs2 = new int[6];
        // 需求：把arrs1中的 30 40 70
        // 复制到 arrs2 中的 [0 , 30 , 40 , 70 , 0 , 0]
        /*
        * arraycopy(Object src,  int srcPos,Object dest, int destPos, int length)
        * 参数一：需要被复制的原数组
        * 参数二：从那个元素索引位置开始复制
        * 参数三：要复制到那个数组
        * 参数四：复制到哪个索引位置开始
        * 参数五：要复制多少个元素。
        */
        System.arraycopy(arrs1,2,arrs2,1 , 3);
        System.out.println(Arrays.toString(arrs2));
-[ ] 能够使用System类获取当前毫秒时刻值
    long time = System.currentTimeMillis();

-[ ] 能够说出使用StringBuilder类可以解决的问题
     字符串的拼接，反转，增删

-[ ] 能够使用StringBuilder进行字符串拼接操作
      append
-[ ] 能够说出8种基本类型对应的包装类名称
     int Integer
     char  Character
-[ ] 能够说出自动装箱、自动拆箱的概念

-[ ] 能够将字符串转换为对应的基本类型
     Xxx.parseXxx(String str)
     Xxx.valueOf(String str)

-[ ] 能够将基本类型转换为对应的字符串
            Integer it = 12 ; // 自动装箱 。
           // 1.转字符串
           // （1）把数据转成字符串
           String rs1 = it.toString() ;
           System.out.println(rs1);

           // (2) 直接+空字符串
           // 任何数据类型与字符串+最终的结果一定是字符串！
           String rs2 = it+"";
           System.out.println(rs2);

           // （3）把数据转成字符串
           String rs3 = Integer.toString(it);
           System.out.println(rs3);