package Day07Demo._13抽象类;
/*
* 抽象类：
*     抽象类的目的是为了被子类集成。
*     抽象类只是写出相同类的共同的部分，有些部分每个子类的行为是不一样的，
*     所以抽象类并不清楚每个子类具体的行为。
*
*     抽象类的定义：加上abstract修饰符即可，就变成了抽象类。
*
*     抽象方法：
*        一个方法加上abstract修饰就变成了抽象方法。
*        要求：
*           （1）必须使用abstract修饰
*           （2）必须没有方法体。
*           （3）只有方法签名
*        意义：
*        父类不清楚每个子类的具体行为的能力，但是父类认为子类一定要有这个行为，
*        父类就通过一个抽象方法来定义这个行为
*        具体的行为实现交给继承的子类去完成。
*
*    抽象方法的注意点：
*        （1）一个类如果继承了抽象类，这个类必须重写抽象方法！
*        （2）一个类如果继承了抽象类，它又没有重写所有的抽象方法
*            那么这个类也必须定义为抽象类。
*        (3) 抽象类是不能创建对象的。
*            抽象类不能创建对象的原因是因为它有抽象方法
*           Student stu = new Student();
*           stu.study();
*
*       （4）抽象方法必须是实例方法。
*           抽象方法不能是静态的。
*
*        (5)一个类如果有了抽象方法，这个类必须是抽象类。
*
*        抽象类的意义：体现的模版模式
*           抽象类存在的价值就是为了被子类继承。
* */
public class AbstractDemo01 {
    public static void main(String[] args){
        Gzs gzs = new Gzs();
        gzs.setName("高中");
        gzs.study();

        Xxs xxs = new Xxs();
        xxs.setName("小学");
        xxs.study();
    }
}
