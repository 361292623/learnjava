package com.itheima._01Junit单元测试;
/*
* Junit单元测试：
*    Junit是一个框架。
*    框架是前人或者优秀的技术人员或者优秀的技术团队，事先发现或者
*    设计的优良软件思想，我们直接拿来用就可以完成一个功能，达到很好的
*    软件设计模型。
*
*    Junit是一个用来测试程序员代码是否与预期结果一致的技术。
*    Junit是用来测试程序员代码的正确性。
*    单元：其实就是类。
*    单元测试就是测试类中方法的正确性。
*
*    Junit是什么
    *  Junit是Java语言编写的第三方单元测试框架(工具类)

    单元测试概念
        * 单元：在Java中，一个类就是一个单元
        * 单元测试：程序猿编写的一小段代码，
        * 用来对某个类中的某个方法进行功能测试或业务逻辑测试。

    Junit单元测试框架的作用
        * 用来对类中的方法功能进行有目的的测试，以保证程序的正确性和稳定性。
        * 能够让方法独立运行起来。

    Junit单元测试的步骤：
       （1）需要去Junit官网下载Junit框架
           框架的形式在Java中都是一些jar包的形式。
           现今流行的IDE工具（Intelij IDEA）会自动的提前集成好
           常用的框架，无需程序员自己去下载。

           Junit属于常用框架，Intelij IDEA工具已经集成好了Junit框架。
           我们无需下载。

       （2）先编写业务代码。
       （3）编写测试类：额外的代码用于测试业务类的正确性。
            测试方法的命名规则：以Test开头，以业务方法名结尾
            比如业务方法名为：save，那么测试方法名就应该叫：TestSave
       （4）定义一个测试方法,一般来说一个方法要对应一个测试方法。
           必须先导入Junit框架（）
            测试方法注意事项
            必须是public修饰的，没有返回值，没有参数
            必须使注解@Test修饰
       （5）测试结果：
              * 绿色：表示测试通过
              * 红色：表示测试失败，有问题
              *
  如何运行测试方法
    * 选中方法名 --> 右键 --> Run '测试方法名'  运行选中的测试方法
    * 选中测试类类名 --> 右键 --> Run '测试类类名'  运行测试类中所有测试方法

    Junit常用注解(Junit4.xxxx版本)
         * @Before：用来修饰方法，该方法会在每一个测试方法执行之前执行一次。
         * @After：用来修饰方法，该方法会在每一个测试方法执行之后执行一次。
         * @BeforeClass：用来修饰静态方法，该方法会在所有测试方法之前执行一次。
         * @AfterClass：用来修饰静态方法，该方法会在所有测试方法之后执行一次。
         它可以在测试方法之前，做资源的初始化，已经在测试方法结束以后做资源的释放.

    Junit常用注解(Junit5.xxxx版本)
         * @BeforeEach：用来修饰方法，该方法会在每一个测试方法执行之前执行一次。
         * @AfterEach：用来修饰方法，该方法会在每一个测试方法执行之后执行一次。
         * @BeforeAll：用来静态修饰方法，该方法会在所有测试方法之前执行一次。
         * @AfterAll：用来静态修饰方法，该方法会在所有测试方法之后执行一次。

*
*
*/
public class JunitDemo01 {
}
