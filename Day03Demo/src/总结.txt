01 能够说出List集合特点
    List是一个接口 ，有两个实现类，ArrayList,LinkedList
    ArrayList是有序，可重复，有索引，基于数组，查询块，增删慢。
    LinkedList是有序，可重复，有索引，基于链，查询慢，增删块。
02.能够说出常见的数据结构
   数组，链，栈，队列，二叉树（一个根节点，每个节点最多两个子节点，大的放右边，小的放左边）
03.能够说出数组结构特点
    一块连续的区域，有索引的，查询速度快，增删速度慢（需要创建新数组，转移元素）
04.能够说出栈结构特点
   后进先出，先进后出

05.能够说出队列结构特点
   先进先出，后进后出

06.能够说出单向链表结构特点
   元素是游离存储，元素与元素之间有链接，所以增删块，查询慢！
07.能够说出Set集合的特点
   无序不重复的
08.能够说出哈希表的特点
   Set集合无序的根本原因
   哈希表：底层是一个数组。
           每次会拿元素的哈希值对数组的长度取余，得到元素的存放位置，
	   位置没有元素就存，位置有元素就形成链或者形成红黑树（JDK 1.8以后才使用，查询性能好）
09.使用HashSet集合存储自定义元素
   Set<Student> stus = new HashSet<>();
10.能够说出可变参数的格式（形参个数可变的方法）
   格式： 类型...变量名称
   注意点： 可以接收任意多个相同类型的数据，可以接收数组，但是不能接受集合，必须放到形参列表的最后面，
            方法的形参列表只能有一个可变参数。

11.能够使用集合工具类（对集合元素进行大小排序）
   Collections :
         添加元素addAll(Collection c, T...ele)
	 打乱元素
	 排序集合
12。能够使用Comparator比较器对集合排序（自定义比较规则）
       /*
        * 参数一：被排序的集合
        * 参数二：制定比较规则（Comparator 比较器）,直接创建比较器
        * Collections.sort(List<T> list,Comparator<? super T> c)
        *
        */
        Collections.sort(stus, new Comparator<Student>() {
            @Override
            public int compare(Student o1, Student o2) {
                if(o1.getAge() > o2.getAge()){
                    return 1 ; // 正正整数，表示o1大于o2,o1会放到后面去
                }else if(o1.getAge() < o2.getAge()){
                    return -1 ; // 父整数 表示o1小于o2，o1会放到前面去
                }
                return 0; // 两个学生年龄一样
            }
        });

	注意： 排序是自动进行的，
	       程序员只需要指定规则，大于返回正数，小于返回负数！等于返回0